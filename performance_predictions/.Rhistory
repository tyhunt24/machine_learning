plot(closeModel.significantVars, which = 3)
---
title: "Performance Predictions on Tesla Stock"
tesla <- read.csv("TSLA.CSV")
tesla.df <- data.frame(tesla)
head(tesla.df)
tail(tesla.df)
# The data structure
str(tesla.df)
names(tesla.df)
class(tesla.df)
summary(tesla.df)
# checks for missing values
sum(is.na(tesla.df))
# Calculate the correlation between all variables
cor(tesla.df[2:7])
datex <- 1:252
closey <- tesla.df[, 2] #Getting just the closing data since it is our dependent Variable
plot(datex, closey)
abline(lm(closey ~ datex))
library(caTools)
set.seed(123)# Reporduce the sample
sample <- sample.split(tesla.df$Close, SplitRatio = 0.8)
tesla.df.train <- subset(tesla.df, sample= True)
tesla.df.test <- subset(tesla.df, sample = False)
head(tesla.df.train)
tail(tesla.df.test)
closeModel <- lm(Close ~., data = tesla.df.train[2:7])
summary(closeModel)
#we improve our model only choosing variables with a p value < 2.2e-16
#also we won't include the ADJ Close Model because it the same as the Close Column
closeModel.significantVars <- lm(Close ~ Open + High + Low, data = tesla.df.train)
summary(closeModel.significantVars)
#Variables used in the model
names(closeModel.significantVars)
#Get the number of fitted variables in the model
length(closeModel.significantVars$fitted.values)
predicted.train <- closeModel.significantVars$fitted.values
head(predicted.train)
predicted.train.df <- data.frame(predicted.train)
# Calculate residuals
predicted.train.df.residuals <- closeModel.significantVars$residuals
head(predicted.train.df.residuals)
predicted.test <- predict(closeModel.significantVars, newdata = tesla.df.test)
head(predicted.test, 10)
predicted.test.df <- data.frame(predicted.test)
# The actual values vs the predicted values
plot(tesla.df.test$Close, col="red", type="l", lty=1.8, main = "Actual vs Predicted Values")
lines(predicted.test.df, col="blue", type="l", lty=1.4)
plot(closeModel.significantVars, which = 1)
plot(closeModel.significantVars, which = 2)
plot(closeModel.significantVars, which = 3)
plot(closeModel.significantVars, which = 5)
ncvTest(closeModel.significantVars)
#Verify residuals are independent
library(car)
#test using the durbinwatson test
durbinWatsonTest(closeModel.significantVars)
ncvTest(closeModel.significantVars)
